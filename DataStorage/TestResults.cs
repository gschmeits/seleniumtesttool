// ***********************************************************************
// Assembly         : DataStorage
// Author           : G.H.M.H. Schmeits
// Created          : 01-04-2018
//
// Last Modified By : G.H.M.H. Schmeits
// Last Modified On : 05-24-2019
// ***********************************************************************
// <copyright file="TestResults.cs" company="SCHMEITS">
//     Copyright ©  2018
// </copyright>
// <summary></summary>
// ***********************************************************************


/// <summary>
/// The DataStorage namespace.
/// </summary>
/// <autogeneratedoc />
/// TODO Edit XML Comment Template for DataStorage
namespace DataStorage
{
    using MySql.Data.MySqlClient;
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Diagnostics;

    /// <summary>
    /// Class TestResults.
    /// </summary>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for TestResults
    public static class TestResults
    {
        /// <summary>
        /// Adds the test result.
        /// </summary>
        /// <param name="application">The application.</param>
        /// <param name="classname">The classname.</param>
        /// <param name="testrun">The testrun.</param>
        /// <param name="testnr">The testnr.</param>
        /// <param name="element">The element.</param>
        /// <param name="attribute">The attribute.</param>
        /// <param name="result">The result.</param>
        /// <param name="screenshot">The screenshot.</param>
        /// <param name="action">The action.</param>
        /// <param name="text">The text.</param>
        /// <param name="url">The URL.</param>
        /// <param name="switch1">The switch1.</param>
        /// <param name="description">The description.</param>
        /// <param name="browserID">The browser identifier.</param>
        /// <param name="inverseString">The inverse string.</param>
        /// <param name="comment">The comment.</param>
        /// <param name="version">The version.</param>
        /// <param name="machinenumber">The machinenumber.</param>
        /// <param name="testelementname">The testelementname.</param>
        /// <param name="start_url">The start URL.</param>
        /// <param name="texttext">The texttext.</param>
        /// <param name="testpage">The testpage.</param>
        /// <param name="testscenario_name">Name of the testscenario.</param>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for AddTestResult
        public static void AddTestResult(
            string application,
            string classname,
            string testrun,
            string testnr,
            string element,
            string attribute,
            string result,
            string screenshot,
            string action,
            string text,
            string url,
            string switch1,
            string description,
            string browserID,
            string inverseString,
            string comment,
            string version,
            string machinenumber,
            string testelementname,
            string start_url,
            string texttext,
            string testpage,
            string testscenario_name,
            string project_id)
        {
            try
            {
                var commandText = "INSERT INTO testresultsselenium SET application= '"
                                  + MySqlHelper.EscapeString(application) + "', ";
                commandText += "testname = '" + MySqlHelper.EscapeString(classname) + "', ";
                commandText += "testrun =  " + MySqlHelper.EscapeString(testrun) + ", ";
                commandText += "testnr = " + MySqlHelper.EscapeString(testnr) + ", ";
                commandText += "elementname ='" + MySqlHelper.EscapeString(testelementname) + "', ";
                commandText += "element = '" + MySqlHelper.EscapeString(element) + "', ";
                commandText += "attribute = '" + MySqlHelper.EscapeString(attribute) + "', ";
                commandText += "action = '" + MySqlHelper.EscapeString(action) + "', ";
                commandText += "text = '" + MySqlHelper.EscapeString(texttext) + "', ";
                commandText += "text_check = '" + MySqlHelper.EscapeString(text) + "', ";
                commandText += "url = '" + MySqlHelper.EscapeString(url) + "', ";
                commandText += "switch = '" + MySqlHelper.EscapeString(switch1) + "', ";
                commandText += "description = '" + MySqlHelper.EscapeString(description) + "', ";
                commandText += "screenshot = '" + MySqlHelper.EscapeString(screenshot) + "', ";
                commandText += "result = '" + MySqlHelper.EscapeString(result) + "', ";
                commandText += "browserID = " + MySqlHelper.EscapeString(browserID) + ", ";
                commandText += "inverse = '" + MySqlHelper.EscapeString(inverseString) + "', ";
                commandText += "comment = '" + MySqlHelper.EscapeString(comment) + "', ";
                commandText += "version = '" + MySqlHelper.EscapeString(version) + "', ";
                commandText += "testscenario_name = '" + MySqlHelper.EscapeString(testscenario_name) + "', ";
                commandText += "start_url = '" + MySqlHelper.EscapeString(start_url) + "', ";
                commandText += "testpage = '" + MySqlHelper.EscapeString(testpage) + "', ";
                commandText += "project_id = " + project_id + ", ";
                commandText += "machinenumber = '" + machinenumber + "';";
                General.AddResultToDatabase(commandText);

                General.LogMessage(
                    commandText,
                    1,
                    MySqlHelper.EscapeString(classname),
                    Convert.ToInt32(testnr),
                    MySqlHelper.EscapeString(application),
                    machinenumber);
            }
            catch (Exception e)
            {
                Debug.Print(e.Message + "\r\n" + e.Source + "\r\n" + e.StackTrace);
                General.LogMessage(
                    e.Message + "\r\n" + e.Source + "\r\n" + e.StackTrace,
                    4,
                    MySqlHelper.EscapeString(classname),
                    Convert.ToInt32(testnr),
                    MySqlHelper.EscapeString(application),
                    machinenumber);
                throw;
            }
        }

        /// <summary>
        /// Gets the result test run.
        /// </summary>
        /// <param name="testrun">The testrun.</param>
        /// <returns>List&lt;Testruns_Selenium&gt;.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for GetResultTestRun
        public static List<Testruns_Selenium> GetResultTestRun(string testrun)
        {
            var testresults1 = new List<Testruns_Selenium>();

            var sqlConn = "SELECT `testruns_selenium`.`idtestruns_selenium`, ";
            sqlConn += "`testruns_selenium`.`testrun_application`, ";
            sqlConn += "`testruns_selenium`.`testrun_run`, ";
            sqlConn += "`testruns_selenium`.`testrun_passed`, ";
            sqlConn += "`testruns_selenium`.`testrun_failed`, ";
            sqlConn += "`testruns_selenium`.`testrun_begintime`, ";
            sqlConn += "`testruns_selenium`.`testrun_endtime`, ";
            sqlConn += "`testruns_selenium`.`testrun_time`, ";
            sqlConn += "`testruns_selenium`.`testrun_browserID`, ";
            sqlConn += "`testruns_selenium`.`testrun_version`, ";
            sqlConn += "`testruns_selenium`.`testscenario_name` ";
            sqlConn += "FROM `autotest`.`testruns_selenium` ";
            sqlConn += "WHERE testrun_run = " + testrun + ";";

            var objConn = new MySqlConnection(General.MySqlConnectionString());
            var objDataAdapter = new MySqlDataAdapter(sqlConn, objConn);
            var objDataset = new DataSet();

            try
            {
                objConn.Open();
                objDataAdapter.Fill(objDataset, "call_calls111");
                for (var i = 0; i < objDataset.Tables[0].Rows.Count; i++)
                    testresults1.Add(
                        new Testruns_Selenium
                        {
                            idtestrun_selenium =
                                    Convert.ToInt64(objDataset.Tables[0].Rows[i][0].ToString()),
                            testrun_application = objDataset.Tables[0].Rows[i][1].ToString(),
                            testrun_run = objDataset.Tables[0].Rows[i][2].ToString(),
                            testrun_passed = objDataset.Tables[0].Rows[i][3].ToString(),
                            testrun_failed = objDataset.Tables[0].Rows[i][4].ToString(),
                            testrun_begintime =
                                    Convert.ToDateTime(objDataset.Tables[0].Rows[i][5].ToString()),
                            testrun_endtime =
                                    Convert.ToDateTime(objDataset.Tables[0].Rows[i][6].ToString()),
                            testrun_time = objDataset.Tables[0].Rows[i][7].ToString(),
                            testrun_browserID =
                                    Convert.ToInt32(objDataset.Tables[0].Rows[i][8].ToString()),
                            testrun_version = objDataset.Tables[0].Rows[i][9].ToString(),
                            testrun_scenario = objDataset.Tables[0].Rows[i][10].ToString()
                        });
                objConn.Close();
            }
            catch (Exception e)
            {
                General.LogMessage(
                    e.Message + "\r\n\r\n" + e.StackTrace + "\r\n\r\n" + e.Source,
                    4,
                    string.Empty,
                    0,
                    string.Empty,
                    InloggerData.MachineCode);
            }

            return testresults1;
        }

        /// <summary>
        /// Gets the test results browsers.
        /// </summary>
        /// <returns>List&lt;Testrun_Browsers&gt;.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for GetTestResultsBrowsers
        public static List<Testrun_Browsers> GetTestResultsBrowsers()
        {
            var testrun_browsers = new List<Testrun_Browsers>();

            var sqlConn = "SELECT * FROM selenium_browsers;";

            var objConn = new MySqlConnection(General.MySqlConnectionString());
            var objDataAdapter = new MySqlDataAdapter(sqlConn, objConn);
            var objDataset = new DataSet();

            try
            {
                objConn.Open();
                objDataAdapter.Fill(objDataset, "call_calls123");
                for (var i = 0; i < objDataset.Tables[0].Rows.Count; i++)
                    testrun_browsers.Add(
                        new Testrun_Browsers
                        {
                            id = Convert.ToInt32(
                                    objDataset.Tables[0].Rows[i]["idselenium_browser"].ToString()),
                            browser_name =
                                    objDataset.Tables[0].Rows[i]["selenium_browsername"].ToString()
                        });
                objConn.Close();
            }
            catch (Exception e)
            {
                General.LogMessage(
                    e.Message + "\r\n\r\n" + e.StackTrace + "\r\n\r\n" + e.Source,
                    4,
                    string.Empty,
                    0,
                    string.Empty,
                    InloggerData.MachineCode);
            }

            return testrun_browsers;
        }

        /// <summary>
        /// Gets the test results HTML.
        /// </summary>
        /// <param name="testrun">The testrun.</param>
        /// <returns>List&lt;TestResultsHTML&gt;.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for GetTestResultsHTML
        public static List<TestResultsHTML> GetTestResultsHTML(string testrun)
        {
            var testresults = new List<TestResultsHTML>();

            var sqlConn = "SELECT testid, testrun, application, testname, testnr, elementname, element, ";
            sqlConn += "attribute, action, text, url, switch, description, browserid, result, ";
            sqlConn += "screenshot, datetime_created ";
            sqlConn += " FROM autotest.testresultsselenium ";
            sqlConn += "WHERE testrun = " + testrun + " ";
            sqlConn += "ORDER BY testnr;";

            var objConn = new MySqlConnection(General.MySqlConnectionString());
            var objDataAdapter = new MySqlDataAdapter(sqlConn, objConn);
            var objDataset = new DataSet();

            try
            {
                objConn.Open();
                objDataAdapter.Fill(objDataset, "call_calls123");
                for (var i = 0; i < objDataset.Tables[0].Rows.Count; i++)
                    testresults.Add(
                        new TestResultsHTML
                        {
                            testrun =
                                    Convert.ToInt32(objDataset.Tables[0].Rows[i]["testrun"].ToString()),
                            application = objDataset.Tables[0].Rows[i]["application"].ToString(),
                            testname = objDataset.Tables[0].Rows[i]["testname"].ToString(),
                            testnr = objDataset.Tables[0].Rows[i]["testnr"].ToString(),
                            elementname = objDataset.Tables[0].Rows[i]["elementname"].ToString(),
                            element = objDataset.Tables[0].Rows[i]["element"].ToString(),
                            attribute = objDataset.Tables[0].Rows[i]["attribute"].ToString(),
                            action = objDataset.Tables[0].Rows[i]["action"].ToString(),
                            text = objDataset.Tables[0].Rows[i]["text"].ToString(),
                            url = objDataset.Tables[0].Rows[i]["url"].ToString(),
                            switch1 = objDataset.Tables[0].Rows[i]["switch"].ToString(),
                            description = objDataset.Tables[0].Rows[i]["description"].ToString(),
                            browserID = objDataset.Tables[0].Rows[i]["browserid"].ToString(),
                            result = objDataset.Tables[0].Rows[i]["result"].ToString(),
                            screenshot = objDataset.Tables[0].Rows[i]["screenshot"].ToString(),
                            datecreated = Convert.ToDateTime(
                                    objDataset.Tables[0].Rows[i]["datetime_created"].ToString())
                        });
                objConn.Close();
            }
            catch (Exception e)
            {
                General.LogMessage(
                    e.Message + "\r\n\r\n" + e.StackTrace + "\r\n\r\n" + e.Source,
                    4,
                    string.Empty,
                    0,
                    string.Empty,
                    InloggerData.MachineCode);
            }

            return testresults;
        }

        /// <summary>
        /// Gets the total test results HTML.
        /// </summary>
        /// <param name="testrun">The testrun.</param>
        /// <returns>List&lt;TotalTestResultsHTML&gt;.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for GetTotalTestResultsHTML
        public static List<TotalTestResultsHTML> GetTotalTestResultsHTML(string testrun)
        {
            var testresults = new List<TotalTestResultsHTML>();

            var sqlConn = "SELECT a.idtestruns_selenium, a.testrun_run, a.testrun_passed, a.testrun_failed, ";
            sqlConn += "a.testrun_begintime, a.testrun_endtime, a.testrun_browserID, b.selenium_browsername,  ";
            sqlConn += "a.testrun_application, a.testrun_time ";
            sqlConn += "FROM autotest.testruns_selenium as a, selenium_browsers as b ";

            sqlConn += "WHERE a.testrun_browserID = b.idselenium_browser ";
            sqlConn += "AND testrun_run = " + testrun + " ";
            sqlConn += "ORDER BY testrun_run;";

            var objConn = new MySqlConnection(General.MySqlConnectionString());
            var objDataAdapter = new MySqlDataAdapter(sqlConn, objConn);
            var objDataset = new DataSet();

            try
            {
                objConn.Open();
                objDataAdapter.Fill(objDataset, "call_calls123");
                for (var i = 0; i < objDataset.Tables[0].Rows.Count; i++)
                    testresults.Add(
                        new TotalTestResultsHTML
                        {
                            idtestruns =
                                    Convert.ToInt64(objDataset.Tables[0].Rows[i][0].ToString()),
                            testrun =
                                    Convert.ToInt64(objDataset.Tables[0].Rows[i][1].ToString()),
                            testrun_passed =
                                    Convert.ToInt64(objDataset.Tables[0].Rows[i][2].ToString()),
                            testrun_failed =
                                    Convert.ToInt64(objDataset.Tables[0].Rows[i][3].ToString()),
                            testrun_begintime = objDataset.Tables[0].Rows[i][4].ToString(),
                            testrun_endtime = objDataset.Tables[0].Rows[i][5].ToString(),
                            testrun_browser = objDataset.Tables[0].Rows[i][7].ToString(),
                            testrun_application = objDataset.Tables[0].Rows[i][8].ToString(),
                            testrun_time = objDataset.Tables[0].Rows[i][9].ToString()
                        });
                objConn.Close();
            }
            catch (Exception e)
            {
                General.LogMessage(
                    e.Message + "\r\n\r\n" + e.StackTrace + "\r\n\r\n" + e.Source,
                    4,
                    string.Empty,
                    0,
                    string.Empty,
                    InloggerData.MachineCode);
            }

            return testresults;
        }

        /// <summary>
        /// Class TestResultsHTML.
        /// </summary>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for TestResultsHTML
        public class TestResultsHTML
        {
            /// <summary>
            /// Gets or sets the action.
            /// </summary>
            /// <value>The action.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for action
            public string action { get; set; }

            /// <summary>
            /// Gets or sets the page.
            /// </summary>
            /// <value>The page.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for page
            public string page { get; set; }

            /// <summary>
            /// Gets or sets the application.
            /// </summary>
            /// <value>The application.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for application
            public string application { get; set; }

            /// <summary>
            /// Gets or sets the attribute.
            /// </summary>
            /// <value>The attribute.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for attribute
            public string attribute { get; set; }

            /// <summary>
            /// Gets or sets the browser identifier.
            /// </summary>
            /// <value>The browser identifier.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for browserID
            public string browserID { get; set; }

            /// <summary>
            /// Gets or sets the datecreated.
            /// </summary>
            /// <value>The datecreated.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for datecreated
            public DateTime datecreated { get; set; }

            /// <summary>
            /// Gets or sets the description.
            /// </summary>
            /// <value>The description.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for description
            public string description { get; set; }


            /// <summary>
            /// Gets or sets the elementname.
            /// </summary>
            /// <value>The elementname.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for elementname
            public string elementname { get; set; }
            /// <summary>
            /// Gets or sets the element.
            /// </summary>
            /// <value>The element.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for element
            public string element { get; set; }


            /// <summary>
            /// Gets or sets the result.
            /// </summary>
            /// <value>The result.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for result
            public string result { get; set; }

            /// <summary>
            /// Gets or sets the screenshot.
            /// </summary>
            /// <value>The screenshot.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for screenshot
            public string screenshot { get; set; }

            /// <summary>
            /// Gets or sets the switch1.
            /// </summary>
            /// <value>The switch1.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for switch1
            public string switch1 { get; set; }

            /// <summary>
            /// Gets or sets the testname.
            /// </summary>
            /// <value>The testname.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testname
            public string testname { get; set; }

            /// <summary>
            /// Gets or sets the testnr.
            /// </summary>
            /// <value>The testnr.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testnr
            public string testnr { get; set; }

            /// <summary>
            /// Gets or sets the testrun.
            /// </summary>
            /// <value>The testrun.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun
            public long testrun { get; set; }

            /// <summary>
            /// Gets or sets the text.
            /// </summary>
            /// <value>The text.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for text
            public string text { get; set; }

            /// <summary>
            /// Gets or sets the URL.
            /// </summary>
            /// <value>The URL.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for url
            public string url { get; set; }
        }

        /// <summary>
        /// Class Testrun_Browsers.
        /// </summary>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Testrun_Browsers
        public class Testrun_Browsers
        {
            /// <summary>
            /// Gets or sets the name of the browser.
            /// </summary>
            /// <value>The name of the browser.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for browser_name
            public string browser_name { get; set; }

            /// <summary>
            /// Gets or sets the identifier.
            /// </summary>
            /// <value>The identifier.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for id
            public long id { get; set; }
        }

        /// <summary>
        /// Class Testruns_Selenium.
        /// </summary>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Testruns_Selenium
        public class Testruns_Selenium
        {
            /// <summary>
            /// Gets or sets the idtestrun selenium.
            /// </summary>
            /// <value>The idtestrun selenium.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for idtestrun_selenium
            public long idtestrun_selenium { get; set; }

            /// <summary>
            /// Gets or sets the testrun application.
            /// </summary>
            /// <value>The testrun application.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun_application
            public string testrun_application { get; set; }

            /// <summary>
            /// Gets or sets the testrun begintime.
            /// </summary>
            /// <value>The testrun begintime.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun_begintime
            public DateTime testrun_begintime { get; set; }

            /// <summary>
            /// Gets or sets the testrun browser identifier.
            /// </summary>
            /// <value>The testrun browser identifier.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun_browserID
            public int testrun_browserID { get; set; }

            /// <summary>
            /// Gets or sets the testrun endtime.
            /// </summary>
            /// <value>The testrun endtime.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun_endtime
            public DateTime testrun_endtime { get; set; }

            /// <summary>
            /// Gets or sets the testrun failed.
            /// </summary>
            /// <value>The testrun failed.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun_failed
            public string testrun_failed { get; set; }

            /// <summary>
            /// Gets or sets the testrun passed.
            /// </summary>
            /// <value>The testrun passed.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun_passed
            public string testrun_passed { get; set; }

            /// <summary>
            /// Gets or sets the testrun run.
            /// </summary>
            /// <value>The testrun run.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun_run
            public string testrun_run { get; set; }

            /// <summary>
            /// Gets or sets the testrun time.
            /// </summary>
            /// <value>The testrun time.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun_time
            public string testrun_time { get; set; }

            /// <summary>
            /// Gets or sets the testrun version.
            /// </summary>
            /// <value>The testrun version.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun_version
            public string testrun_version { get; set; }

            /// <summary>
            /// Gets or sets the testrun scenario.
            /// </summary>
            /// <value>The testrun scenario.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun_scenario
            public string testrun_scenario { get; set; }
        }

        /// <summary>
        /// Class TotalTestResultsHTML.
        /// </summary>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for TotalTestResultsHTML
        public class TotalTestResultsHTML
        {
            /// <summary>
            /// Gets or sets the idtestruns.
            /// </summary>
            /// <value>The idtestruns.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for idtestruns
            public long idtestruns { get; set; }

            /// <summary>
            /// Gets or sets the testrun.
            /// </summary>
            /// <value>The testrun.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun
            public long testrun { get; set; }

            /// <summary>
            /// Gets or sets the testrun application.
            /// </summary>
            /// <value>The testrun application.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun_application
            public string testrun_application { get; set; }

            /// <summary>
            /// Gets or sets the testrun begintime.
            /// </summary>
            /// <value>The testrun begintime.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun_begintime
            public string testrun_begintime { get; set; }

            /// <summary>
            /// Gets or sets the testrun browser.
            /// </summary>
            /// <value>The testrun browser.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun_browser
            public string testrun_browser { get; set; }

            /// <summary>
            /// Gets or sets the testrun endtime.
            /// </summary>
            /// <value>The testrun endtime.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun_endtime
            public string testrun_endtime { get; set; }

            /// <summary>
            /// Gets or sets the testrun failed.
            /// </summary>
            /// <value>The testrun failed.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun_failed
            public long testrun_failed { get; set; }

            /// <summary>
            /// Gets or sets the testrun passed.
            /// </summary>
            /// <value>The testrun passed.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun_passed
            public long testrun_passed { get; set; }

            /// <summary>
            /// Gets or sets the testrun time.
            /// </summary>
            /// <value>The testrun time.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testrun_time
            public string testrun_time { get; set; }

            /// <summary>
            /// Gets or sets the testpage.
            /// </summary>
            /// <value>The testpage.</value>
            /// <autogeneratedoc />
            /// TODO Edit XML Comment Template for testpage
            public string testpage { get; set; }
        }
    }
}