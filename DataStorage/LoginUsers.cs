// ***********************************************************************
// Assembly         : DataStorage
// Author           : G.H.M.H. Schmeits
// Created          : 07-21-2018
//
// Last Modified By : G.H.M.H. Schmeits
// Last Modified On : 05-24-2019
// ***********************************************************************
// <copyright file="LoginUsers.cs" company="SCHMEITS SOFTWARE">
//     Copyright ©  2018
// </copyright>
// <summary></summary>
// ***********************************************************************
/// <summary>
/// The DataStorage namespace.
/// </summary>
/// <autogeneratedoc />
/// TODO Edit XML Comment Template for DataStorage
namespace DataStorage
{
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Windows;

    using MySql.Data.MySqlClient;

    /// <summary>
    /// Class LoginUsers.
    /// </summary>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for LoginUsers
    public static class LoginUsers
    {
        /// <summary>
        /// Finds the user.
        /// </summary>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for FindUser
        public static void FindUser()
        {
        }

        /// <summary>
        /// Gebruikers the ingelogd.
        /// </summary>
        /// <param name="code">The code.</param>
        /// <returns>System.String.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for gebruikerIngelogd
        public static string gebruikerIngelogd(string code)
        {
            var sSQL = "SELECT ingelogd FROM medewerkers WHERE medewerkerscode = '" + code + "'";
            return sSQL;
        }

        /// <summary>
        /// Gets the aantal gebruikers.
        /// </summary>
        /// <param name="medewerkerscode">The medewerkerscode.</param>
        /// <param name="wachtwoord">The wachtwoord.</param>
        /// <returns>System.Int32.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for GetAantalGebruikers
        public static int GetAantalGebruikers(string medewerkerscode, string wachtwoord)
        {
            var count = 0;
            var query = "SELECT Count(*) FROM medewerkers WHERE ";
            query += "medewerkerscode = '" + medewerkerscode.ToUpper() + "' ";
            query += " AND datum_geldigheid >= '" + DateTime.Now.ToString("yyyy-MM-dd") + "' ";
            if (wachtwoord != string.Empty) query += "AND password = SHA1('" + wachtwoord + "') ";

            var objConn = new MySqlConnection(General.MySqlConnectionString());
            var objDataAdapter = new MySqlDataAdapter(query, objConn);
            var objDataset = new DataSet();

            try
            {
                objConn.Open();
                objDataAdapter.Fill(objDataset, "call_calls111");
                count = Convert.ToInt16(objDataset.Tables[0].Rows[0][0].ToString());
                objConn.Close();
            }
            catch (Exception e)
            {
                General.LogMessage(e.Message + "\r\n\r\n" + e.StackTrace + "\r\n\r\n" + e.Source, 4);
            }

            return count;
        }

        /// <summary>
        /// Gets the selected user.
        /// </summary>
        /// <param name="medewerkerscode">The medewerkerscode.</param>
        /// <returns>List&lt;Login.Medewerker&gt;.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for GetSelectedUser
        public static List<Login.Medewerker> GetSelectedUser(string medewerkerscode)
        {
            var loginUser = new List<Login.Medewerker>();
            var query =
                "SELECT medewerkerscode, medewerker, password, ingelogd, rol, actief, blokked, ";
            query += "datum_aangemaakt, datum_gewijzigd";
            query += " FROM medewerkers WHERE ";
            query += "medewerkerscode = '" + medewerkerscode + "';";

            var objConn = new MySqlConnection(General.MySqlConnectionString());
            var objDataAdapter = new MySqlDataAdapter(query, objConn);
            var objDataset = new DataSet();
            var ingelogdvar = false;
            var actiefvar = false;
            var geblokkedvar = false;
            try
            {
                objConn.Open();
                objDataAdapter.Fill(objDataset, "call_calls111");
                for (var i = 0; i < objDataset.Tables[0].Rows.Count; i++)
                    loginUser.Add(
                        new Login.Medewerker
                            {
                                MedewerkerCode = objDataset.Tables[0].Rows[i][0].ToString(),
                                MedewerkerNaam = objDataset.Tables[0].Rows[i][1].ToString(),
                                Wachtwoord = objDataset.Tables[0].Rows[i][2].ToString(),
                                Ingelogd =
                                    objDataset.Tables[0].Rows[i][3].ToString() == "1" ? true : false,
                                Rol = Convert.ToInt16(objDataset.Tables[0].Rows[i][4].ToString()),
                                Actief =
                                    objDataset.Tables[0].Rows[i][5].ToString() == "1" ? true : false,
                                Geblokkeerd =
                                    objDataset.Tables[0].Rows[i][6].ToString() == "1" ? true : false,
                                DatumAangemaakt = Convert.ToDateTime(objDataset.Tables[0].Rows[i][7].ToString()),
                                DatumGewijzigd = Convert.ToDateTime(objDataset.Tables[0].Rows[i][8].ToString())
                                
                            });
                objConn.Close();
            }
            catch (Exception e)
            {
                General.LogMessage(e.Message + "\r\n\r\n" + e.StackTrace + "\r\n\r\n" + e.Source, 4);
            }

            return loginUser;
        }

        /// <summary>
        /// Gets the status ingelogd.
        /// </summary>
        /// <param name="code">The code.</param>
        /// <returns>System.String.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for getStatusIngelogd
        public static string getStatusIngelogd(string code)
        {
            var sSQL = "SELECT blokked FROM medewerkers WHERE medewerkerscode = '" + code + "';";
            var dt = GenericDataRead.GetData(sSQL);
            sSQL = "0";
            if (dt.Rows.Count > 0) sSQL = dt.Rows[0][0].ToString();
            return sSQL;
        }

        /// <summary>
        /// Selects the user.
        /// </summary>
        /// <param name="gebruiker">The gebruiker.</param>
        /// <returns>System.String.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for selectUser
        public static string selectUser(string gebruiker)
        {
            var sSQL = "SELECT medewerkerscode, medewerker, rol FROM medewerkers WHERE medewerkerscode = '";
            sSQL += gebruiker + "' AND actief = 1";
            return sSQL;
        }

        /// <summary>
        /// Sets the ingelogd.
        /// </summary>
        /// <param name="medewerkerscode">The medewerkerscode.</param>
        /// <param name="ingelogd">if set to <c>true</c> [ingelogd].</param>
        /// <param name="geblokkeerd">if set to <c>true</c> [geblokkeerd].</param>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for SetIngelogd
        public static void SetIngelogd(string medewerkerscode, bool ingelogd, bool geblokkeerd)
        {
            try
            {
                var commandText = "UPDATE medewerkers SET ";
                commandText += "ingelogd = " + ingelogd + ", ";
                commandText += "blokked = " + geblokkeerd + " ";
                commandText += "WHERE medewerkerscode = '" + medewerkerscode + "';";
                General.ExecuteQueryCommand(commandText);
            }
            catch (Exception e)
            {
                MessageBox.Show(e.Message + "\r\n" + e.Source + "\r\n" + e.StackTrace);
            }
        }

        /// <summary>
        /// Updates the blokked.
        /// </summary>
        /// <param name="code">The code.</param>
        /// <param name="blokked">The blokked.</param>
        /// <returns>System.String.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for updateBlokked
        public static string updateBlokked(string code, string blokked)
        {
            var sSQL = "UPDATE medewerkers SET ";
            sSQL += "blokked = '" + blokked + "'";
            sSQL += "WHERE medewerkerscode = '" + code + "';";
            return sSQL;
        }

        /// <summary>
        /// Updates the ingelogd status.
        /// </summary>
        /// <param name="code">The code.</param>
        /// <param name="waarde">The waarde.</param>
        /// <returns>System.String.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for updateIngelogdStatus
        public static string updateIngelogdStatus(string code, string waarde)
        {
            var sSQL = "UPDATE medewerkers SET ingelogd = '" + waarde + "' WHERE medewerkerscode = '" + code + "'";
            return sSQL;
        }

        /// <summary>
        /// Updates the wachtwoord.
        /// </summary>
        /// <param name="code">The code.</param>
        /// <param name="wachtwoord">The wachtwoord.</param>
        /// <returns>System.String.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for updateWachtwoord
        public static string updateWachtwoord(string code, string wachtwoord)
        {

            var dattijd = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");

            var sSQL = "UPDATE medewerkers SET ";
            sSQL += "password = SHA1('" + wachtwoord + "'), ";
            sSQL += "datum_gewijzigd = '" + dattijd + "'";
            sSQL += " WHERE medewerkerscode = '" + code + "';";
            return sSQL;
        }

        /// <summary>
        /// Zoeks the medewerker.
        /// </summary>
        /// <param name="code">The code.</param>
        /// <param name="wachtwoord">The wachtwoord.</param>
        /// <returns>System.String.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for zoekMedewerker
        public static string zoekMedewerker(string code, string wachtwoord)
        {
            var sSQL = "SELECT Count(*) AS Teller  FROM medewerkers ";
            sSQL += "WHERE ";
            sSQL += "medewerkerscode = '" + code + "' ";
            sSQL += "AND ";
            sSQL += "password = SHA1('" + wachtwoord + "') ";
            sSQL += "AND actief = 1 ";
            return sSQL;
        }
    }
}