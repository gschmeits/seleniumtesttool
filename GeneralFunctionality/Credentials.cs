// ***********************************************************************
// Assembly         : GeneralFunctionality
// Author           : G.H.M.H. Schmeits
// Created          : 01-05-2018
//
// Last Modified By : G.H.M.H. Schmeits
// Last Modified On : 05-14-2019
// ***********************************************************************
// <copyright file="Credentials.cs" company="SCHMEITS SOFTWARE">
//     Copyright ©  2018
// </copyright>
// <summary></summary>
// ***********************************************************************

using System.Linq;

namespace GeneralFunctionality
{
    using System.Collections.Generic;
    using System.Xml.Linq;

    using NUnit.Framework;

    /// <summary>
    /// Class Credentials.
    /// </summary>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for Credentials
    public class Credentials
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Credentials" /> class.
        /// </summary>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for #ctor
        public Credentials()
        {
            XElement xelement = XElement.Load(Functions.GetCurrentDir(0) + "credentials.xml");
            IEnumerable<XElement> testsElements = xelement.Elements();
            foreach (var testElement in testsElements)
            {
                Url = testElement.Element("url").Value;
                Application = testElement.Element("application").Value;
                Page = testElement.Element("page").Value;
            }
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Credentials" /> class.
        /// </summary>
        /// <param name="bestandsnaam">The bestandsnaam.</param>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for #ctor
        public Credentials(string bestandsnaam)
        {
            if (bestandsnaam != null)
            {
                XElement xelement = XElement.Load(Functions.GetCurrentDir(1) + bestandsnaam + ".xml");
                IEnumerable<XElement> testsElements = xelement.Elements();

                var tel = testsElements.Count();
                foreach (var testElement in testsElements)
                {
                    Url = testElement.Element("url").Value;
                    Application = testElement.Element("application").Value;
                    Page = testElement.Element("page").Value;
                }
            }
        }

        /// <summary>
        /// Gets or sets the URL.
        /// </summary>
        /// <value>The URL.</value>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Url
        public string Url { get; set; }

        /// <summary>
        /// Gets or sets the application.
        /// </summary>
        /// <value>The application.</value>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Application
        public string Application { get; set; }

        /// <summary>
        /// Gets or sets the page.
        /// </summary>
        /// <value>The page.</value>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Page
        public string Page { get; set; }
    }
}