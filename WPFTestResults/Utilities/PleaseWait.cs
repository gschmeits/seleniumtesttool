// ***********************************************************************
// Assembly         : SeleniumTestTool
// Author           : G.H.M.H. Schmeits
// Created          : 03-16-2018
//
// Last Modified By : G.H.M.H. Schmeits
// Last Modified On : 03-28-2018
// ***********************************************************************
// <copyright file="PleaseWait.cs" company="SCHMEITS SOFTWARE">
//     Copyright © G.H.M.H. Schmeits  2018
// </copyright>
// <summary></summary>
// ***********************************************************************
using BikeBillWPF2016;
using System;
using System.Threading;
using System.Windows.Forms;

/// <summary>
/// Class PleaseWait.
/// </summary>
/// <autogeneratedoc />
/// TODO Edit XML Comment Template for PleaseWait
public class PleaseWait : IDisposable
{
    /// <summary>
    /// The m splash
    /// </summary>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for mSplash
    private Form mSplash;

    /// <summary>
    /// The int posy
    /// </summary>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for intPOSY
    public int intPOSY;

    /// <summary>
    /// Initializes a new instance of the <see cref="PleaseWait"/> class.
    /// </summary>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for #ctor
    public PleaseWait()
    {
        Thread t = new Thread(new ThreadStart(workerThread));
        t.IsBackground = true;
        t.SetApartmentState(ApartmentState.STA);
        t.Start();
    }

    /// <summary>
    /// Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
    /// </summary>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for Dispose
    public void Dispose()
    {
        mSplash.Invoke(new MethodInvoker(stopThread));
    }

    /// <summary>
    /// Stops the thread.
    /// </summary>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for stopThread
    private void stopThread()
    {
        mSplash.Close();
    }

    /// <summary>
    /// Workers the thread.
    /// </summary>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for workerThread
    private void workerThread()
    {
        mSplash = new WaitForm(intPOSY); // Substitute this with your own
        Application.Run(mSplash);
    }
}