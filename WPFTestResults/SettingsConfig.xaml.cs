// ***********************************************************************
// Assembly         : WPFTestResults
// Author           : G.H.M.H. Schmeits
// Created          : 03-09-2018
//
// Last Modified By : G.H.M.H. Schmeits
// Last Modified On : 08-19-2018
// ***********************************************************************
// <copyright file="SettingsConfig.xaml.cs" company="SCHMEITS">
//     Copyright ©  2018
// </copyright>
// <summary></summary>
// ***********************************************************************

namespace WPFTestResults
{
    using GeneralFunctionality;
    using System;
    using System.Reflection;
    using System.Windows;
    using System.Xml;

    /// <summary>
    /// Class SettingsConfig.
    /// </summary>
    /// <seealso cref="System.Windows.Window" />
    /// <seealso cref="System.Windows.Markup.IComponentConnector" />
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for SettingsConfig
    public partial class SettingsConfig : Window
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SettingsConfig"/> class.
        /// </summary>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for #ctor
        public SettingsConfig()
        {
            this.InitializeComponent();
            Type colors = typeof(System.Drawing.Color);
            PropertyInfo[] colorInfo = colors.GetProperties(BindingFlags.Public |
                                                            BindingFlags.Static);
            foreach (PropertyInfo info in colorInfo)
            {
                ComboBoxBoderColor.Items.Add(info.Name);
            }
        }

        /// <summary>
        /// Handles the Loaded event of the Window control.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">The <see cref="RoutedEventArgs"/> instance containing the event data.</param>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Window_Loaded
        private void Window_Loaded(object sender, RoutedEventArgs e)
        {
            OverallSettings.ShowData();
            var showBorderColor = OverallSettings.ShowBorderColor;
            var showBorderWidth = OverallSettings.ShowBorderWidth;
            var showShowTime = OverallSettings.ShowDuration;
            var showExtraChecks = OverallSettings.ShowExtraChecks;
            var showErrorDisplay = OverallSettings.ShowErrorDisplay;

            this.ComboBoxBoderColor.Text = showBorderColor;
            this.ComboBoxBorderWidth.Text = showBorderWidth.ToString();
            this.ComboBoxDuration.Text = showShowTime.ToString();
            this.ComboBoxCheckTimes.Text = showExtraChecks.ToString();
            if (showErrorDisplay.ToString() == "0")
            {
                this.CheckBoxErrorDisplay.IsChecked = false;
            }
            if (showErrorDisplay.ToString() == "1")
            {
                this.CheckBoxErrorDisplay.IsChecked = true;
            }
        }

        /// <summary>
        /// Handles the Click event of the ButtonSaveConfig control.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">The <see cref="RoutedEventArgs"/> instance containing the event data.</param>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for ButtonSaveConfig_Click
        private void ButtonSaveConfig_Click(object sender, RoutedEventArgs e)
        {
            var settingsXML = new XmlWriterSettings();
            settingsXML.Indent = true;
            settingsXML.OmitXmlDeclaration = true;
            settingsXML.IndentChars = "\t";

            using (XmlWriter writer =
                XmlWriter.Create(Functions.GetCurrentDir(0) + "config.xml", settingsXML))
            {
                var showError = "0";
                writer.WriteStartDocument();
                writer.WriteStartElement("settings");
                writer.WriteStartElement("setting");
                writer.WriteElementString("bordercolor", this.ComboBoxBoderColor.Text);
                writer.WriteElementString("borderwidth", this.ComboBoxBorderWidth.Text);
                writer.WriteElementString("duration", this.ComboBoxDuration.Text);
                writer.WriteElementString("checks", this.ComboBoxCheckTimes.Text);

                if (this.CheckBoxErrorDisplay.IsChecked == true)
                {
                    showError = "1";
                }
                writer.WriteElementString("errors", showError);
                writer.WriteEndElement();
                writer.WriteEndElement();
                writer.WriteEndDocument();


            }

            OverallSettings.ShowData();

            MessageBox.Show(
                "TestSet settings are saved!!!",
                "Message",
                MessageBoxButton.OK,
                MessageBoxImage.Information);
            this.Close();
        }
    }
}
